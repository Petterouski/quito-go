# Archivo de configuración de Docker Compose versión 3.9
# Define y orquesta múltiples servicios para un entorno de desarrollo o producción.

version: "3.9"

services:
  # Servicio del backend de la aplicación
  backend:
    # Construye la imagen del backend desde el Dockerfile ubicado en ./backend
    build: ./backend
    # Mapear el puerto 8000 del contenedor al puerto 8000 del host
    ports:
      - "8000:8000"
    # Define dependencias para asegurar que los servicios necesarios estén activos antes de levantar el backend
    depends_on:
      - mysql     # Base de datos MySQL
      - mongo     # Base de datos MongoDB
    # Monta el directorio local ./backend en /app dentro del contenedor
    volumes:
      - ./backend:/app

  # Servicio de la base de datos MySQL
  mysql:
    # Usa la imagen oficial de MySQL versión 8.0
    image: mysql:8.0
    # Variables de entorno para configuración inicial de MySQL
    environment:
      MYSQL_ROOT_PASSWORD: root       # Contraseña para el usuario root
      MYSQL_DATABASE: quitogo_db       # Base de datos por defecto creada en la inicialización
    # Mapear el puerto 3306 del contenedor al puerto 3307 del host para evitar conflictos
    ports:
      - "3307:3306"
    # Volumen persistente para los datos de MySQL
    volumes:
      - mysql_data:/var/lib/mysql

  # Servicio de la base de datos MongoDB
  mongo:
    # Usa la imagen oficial de MongoDB en su última versión
    image: mongo:latest
    # Mapear el puerto 27017 del contenedor al mismo puerto en el host
    ports:
      - "27017:27017"
    # Volumen persistente para los datos de MongoDB
    volumes:
      - mongo_data:/data/db

  # Servicio del frontend de la aplicación
  frontend:
    # Usa la imagen de Nginx basada en Alpine Linux para un tamaño reducido
    image: nginx:alpine
    # Mapear el puerto 80 del contenedor al puerto 8080 del host, para acceder vía localhost:8080
    ports:
      - "8080:80"
    # Monta el directorio ./frontend en la ubicación predeterminada de Nginx para servir archivos estáticos (solo lectura)
    volumes:
      - ./frontend:/usr/share/nginx/html:ro

# Definición de volúmenes persistentes para bases de datos
volumes:
  mysql_data:
  mongo_data:
